<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-simmen-rpp-dns-data-00" category="info" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="RPP DNS data representation">DNS data representation for use in RESTful Provisioning Protocol (RPP)</title>

    <author fullname="Christian Simmen">
      <organization>DENIC eG</organization>
      <address>
        <postal>
          <country>DE</country>
        </postal>
        <email>simmen@denic.de</email>
      </address>
    </author>
    <author fullname="Pawel Kowalik">
      <organization>DENIC eG</organization>
      <address>
        <postal>
          <country>DE</country>
        </postal>
        <email>pawel.kowalik@denic.de</email>
      </address>
    </author>

    <date year="2025" month="July" day="07"/>

    <area>Applications and Real-Time</area>
    <workgroup>rpp</workgroup>
    <keyword>rpp</keyword> <keyword>epp</keyword> <keyword>json</keyword> <keyword>provisioning</keyword> <keyword>host</keyword>

    <abstract>


<?line 84?>

<t>This document proposes a unified, extensible JSON representation for DNS resource records for use in the RESTful Provisioning Protocol (RPP). The aim is to create a single, consistent structure for provisioning all DNS-related data - including delegation, DNSSEC, and other record types - that directly mirrors the DNS data model and being mappable to existing EPP model of requests and responses same time. This approach simplifies the adoption of both current and future DNS features by aligning the provisioning format with the target system, thereby streamlining the management of domain names and related objects within RPP.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        The latest revision of this draft can be found at <eref target="https://github.com/christian-simmen/draft-simmen-rpp-dns-data"/>.
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-simmen-rpp-dns-data/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        WG Working Group mailing list (<eref target="mailto:rpp@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/rpp/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/rpp/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/christian-simmen/draft-simmen-rpp-dns-data"/>.</t>
    </note>


  </front>

  <middle>


<?line 88?>

<section anchor="introduction"><name>Introduction</name>

<t>The Extensible Provisioning Protocol (EPP) manages DNS delegation data using distinct object types and extensions. Host Objects <xref target="RFC5732"/> are used for name servers (NS records) and their associated addresses (glue A/AAAA records), while DNSSEC data is handled via a separate security extension <xref target="RFC5910"/>. Name server information can be also directly attached to a domain name as a set of Host Attributes <xref target="RFC5731"/>. More recently, control over Time-to-Live (TTL) values was added through another extension <xref target="RFC9803"/>.</t>

<t>While functional, this segmented approach creates complexity. The DNS landscape itself is evolving, with new transport protocols like DNS-over-HTTPS <xref target="RFC8484"/> and DNS-over-QUIC <xref target="RFC9250"/> driving the need for more sophisticated delegation information, such as the proposed DELEG record type <xref target="I-D.draft-ietf-deleg"/>.</t>

<t>Some registry operators have developed their own proprietary solutions. These include grouping name servers into "sets" for easier management or allowing domains to be provisioned with arbitrary DNS resource records (RR) without formal delegation, which is expanding on Host Attribute model with other resource record types.</t>

<t>The development of the RESTful Provisioning Protocol (RPP) provides an opportunity to address this fragmentation. This document proposes a unified data representation for all DNS-related information, specified in a format that directly mirrors DNS resource records. This approach is not intended to influence existing registry data models, but rather to offer a flexible and consistent structure for the data in the protocol. By unifying the representation of delegation data (NS, A/AAAA glue), DNSSEC information, and other record types, this model can be applied across various contexts. It is designed to be equally applicable whether a registry uses separate host objects, host attributes within a domain, or more abstract concepts like name server sets, thereby simplifying implementation and ensuring adaptability for future developments in the DNS.</t>

</section>
<section anchor="domain-names-in-dns"><name>Domain Names in DNS</name>

<t>DNS domain names are hierarchically ordered label separated by a dot ".". Each label represent the delegation of a subordinate namespace or a host name. DNS resource records <xref target="RFC1035"/> are expressed as a dataset containing:</t>

<t>"NAME" "CLASS" "TYPE" "TTL" "RDLENGTH" "RDATA"</t>

<t>A set of resource records describes the behavior of a namespace. Each resource record shares the same top level format.</t>

<t>NAME      The owner name of the DNS entry which <bcp14>MAY</bcp14> be the domain itself or a subordinate hostname.</t>

<t>CLASS     The RR CLASS</t>

<t>TYPE      The RR TYPE of data present in the RDATA field.</t>

<t>TTL       Time interval a RR may be cached by name servers</t>

<t>RDLENGTH  The length of the RDATA field. RDLENGTH will be safely ignored in RPP</t>

<t>RDATA     The actual payload data. Structures defer for each type.</t>

</section>
<section anchor="json-representation"><name>JSON representation</name>

<section anchor="rules"><name>Rules</name>

<section anchor="dns-data-extending-an-domain-object"><name>DNS data extending an domain object</name>
<t>Delegation data, as well as DNSSEC data, is intended to find it's way into the parent side DNS servers. Because of the strong connection to the provisioned domain object and DNS servers both aspects should be visible in the RPP data model. Therefore the domain object is extended by an array of DNS entries. The properties of an object in this array <bcp14>MUST</bcp14> be a representation of the top level format as described in section 3.2.1 of <xref target="RFC1035"/>. All keys <bcp14>MUST</bcp14> be lowercase. Whitespaces <bcp14>MUST</bcp14> be translated to underscores ("_").</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "",
          "class": "",
          "type": "",
          "ttl": "",
          "rdata": {}
        }
      ]
    }
]]></sourcecode></figure>

</section>
<section anchor="dns-record-structure-representation"><name>DNS record structure representation</name>

<section anchor="name"><name>name</name>

<t>The owner name of the DNS entry which <bcp14>MAY</bcp14> be the domain itself or a subordinate hostname. A server <bcp14>MUST NOT</bcp14> accept a NAME which is not a subordinate label to the provisioned domain name.</t>

<t>A server <bcp14>MUST</bcp14> accept values as "@", "relative names" and fully qualified domain names (FQDN).</t>

<t>"@" <bcp14>MUST</bcp14> be interpreted as the provisioned domain name.</t>

<t>"relative names" <bcp14>MUST</bcp14> be appended by the server with the provisioned domain name.</t>

<t>"FQDN" identified by a trailing dot (".") <bcp14>MUST NOT</bcp14> be interpreted by the server. A server <bcp14>MUST</bcp14> check if the provided name is a subordinate to the provisioned domain, or the domain itself.</t>

<t>Example:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "a",
          "rdata": {
            "address": "192.0.2.1"
          }
        },
        {
          "name": "www",
          "type": "a",
          "rdata": {
            "address": "192.0.2.2"
          }
        },
        {
          "name": "web.example.com.",
          "type": "a",
          "rdata": {
            "address": "192.0.2.3"
          }
        }
      ]
    }
]]></sourcecode></figure>

<t>The above example implies three resulting records:</t>

<t><list style="symbols">
  <t>An "A" RR for "example.com" ("@") set to 192.0.2.1.</t>
  <t>An "A" RR for "www.example.com" ("www" relative) set to 192.0.2.2.</t>
  <t>An "A" RR for "web.example.com" (FQDN) set to 192.0.2.3.</t>
</list></t>

</section>
<section anchor="class"><name>class</name>

<t>A client <bcp14>SHOULD</bcp14> omit the class. The server <bcp14>MUST</bcp14> assume "IN" as class of a transferred dataset and <bcp14>MAY</bcp14> decline other values. If present the value <bcp14>MUST</bcp14> be chosen from section 3.2.4. (CLASS values) of <xref target="RFC1035"/>.</t>

</section>
<section anchor="type"><name>type</name>

<t>The TYPE of data present in the RDATA. This also implies the expected fields in RDATA.
If present the value <bcp14>MUST</bcp14> chosen from section 3.2.2. (TYPE values) of <xref target="RFC1035"/> or other RFC describing the RR type. Values <bcp14>MUST</bcp14> be converted to lower case.</t>

</section>
<section anchor="ttl"><name>ttl</name>

<t>TTL is considered a operational control (see section 3.1.3 and section 4.3.1 of this document). A server <bcp14>MUST</bcp14> set a default value as TTL and <bcp14>MAY</bcp14> ignore other values send by a client.</t>

</section>
<section anchor="rdlength"><name>rdlength</name>

<t>RDLENGTH specifies the length of the RDATA field and will be ignored in RPP. A client <bcp14>MUST NOT</bcp14> include this field. A server <bcp14>MUST</bcp14> ignore this field if present.</t>

</section>
<section anchor="rdata"><name>rdata</name>

<t>The RDATA structure depends on the TYPE and <bcp14>MUST</bcp14> be expressed as a JSON object. Property names <bcp14>MUST</bcp14> follow the definition of the RDATA described by the corresponding RFC. Property names <bcp14>MUST</bcp14> be translated to lowercase. Whitespaces <bcp14>MUST</bcp14> be translated to underscores ("_").</t>

<t>Example:</t>

<t><list style="symbols">
  <t>Section 3.3.11 (NS RDATA format) of <xref target="RFC1035"/> describes the RDATA of a NS RR having a field named "NSDNAME".</t>
  <t>Section 3.3.9 (MX RDATA format) of <xref target="RFC1035"/> describes the RDATA of a MX RR having the field named "PREFERENCE", "EXCHANGE".</t>
</list></t>

<t>The resulting structure is therefore:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "mx",
          "rdata": {
            "preference": "10",
            "exchange": "mx1.example.net"
          }
        }
      ]
    }
]]></sourcecode></figure>

</section>
</section>
<section anchor="operational-controls"><name>Operational controls</name>

<t>In addition to the regular data a server <bcp14>MAY</bcp14> allow clients to control specific operational behavior. A client <bcp14>MAY</bcp14> add an JSON object with a number of "dns_controls" to the domain object.</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "<name>",
          "type": "<type>",
          "rdata": {
            "rdata_key": "<rdata_value>"
          }
        }
      ],
      "dns_controls": {
        "<named_control>": "<named_control_value>"
      }
    }
]]></sourcecode></figure>

</section>
<section anchor="future-dns-record-types"><name>Future DNS record types</name>

<t>With respect to an evolving DNS landscape new record types - including delegation - may emerge. Usually these record type will be defined and standardized for the DNS in first. Adopting future record types <bcp14>MUST</bcp14> be done using the rules described in section 3.1.2.6 of this document.</t>

</section>
</section>
</section>
<section anchor="use-cases"><name>Use cases</name>

<section anchor="domain-delegation-host-attribute"><name>Domain delegation (Host Attribute)</name>

<t>To enable domain delegation a server <bcp14>MUST</bcp14> support the "NS", "A" and "AAAA" record types (<xref target="RFC1035"/>, <xref target="RFC3596"/>).</t>

<t>In this delegation model the delegation information and corresponding DNS configuration is attached directly to a domain object. This is corresponding to Host Attribute delegation model of <xref target="RFC5731"/>.</t>

<t>A minimal delegation can be expressed by adding an array of name servers to the DNS data of a domain:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns2.example.net."
          }
        }
      ]
    }
]]></sourcecode></figure>

<t>If GLUE records are needed the client may add records of type "A" or "AAAA" :</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns.example.com"
          }
        },
        {
          "name": "ns.example.com.",
          "type": "a",
          "rdata": {
            "address": "192.0.2.1"
          }
        },
        {
          "name": "ns.example.com.",
          "type": "aaaa",
          "rdata": {
            "address": "2001:DB8::1"
          }
        }
      ]
    }
]]></sourcecode></figure>

</section>
<section anchor="host-object"><name>Host Object</name>

<t><xref target="RFC5731"/> specifies how domain delegation can be expressed as a relation to a separate provisioning object (Host Object), which carries the DNS configuration (name and glue records), with details specified in <xref target="RFC5732"/>.</t>

<t>To enable specification of Host Objexts, similar to direct domain delegation, a server <bcp14>MUST</bcp14> support the "NS", "A" and "AAAA" record types (<xref target="RFC1035"/>, <xref target="RFC3596"/>).</t>

<t>DNS configuration of Host Object is specified by NS, A and AAAA configuration within "dns" data structure:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Host",
      "name": "ns.example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns.example.com"
          }
        },
        {
          "name": "ns.example.com.",
          "type": "a",
          "rdata": {
            "address": "192.0.2.1"
          }
        },
        {
          "name": "ns.example.com.",
          "type": "aaaa",
          "rdata": {
            "address": "2001:DB8::1"
          }
        }
      ]
    }
]]></sourcecode></figure>

</section>
<section anchor="dnssec"><name>DNSSEC</name>

<t>To enable DNSSEC provisioning a server <bcp14>SHOULD</bcp14> support either "DS" or "DNSKEY" or both record types. The records <bcp14>MUST</bcp14> be added to the "dns" array of the domain. If provided with only "DNSKEY" a server <bcp14>MUST</bcp14> calculate the DS record. If both record types are provided a server <bcp14>MAY</bcp14> use the DNSKEY to validate the DS record.</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns2.example.net."
          }
        },
        {
          "name": "@",
          "type": "ds",
          "rdata": {
            "key_tag": 12345,
            "algorithm": 13,
            "digest_type": 2,
            "digest": "BE74359954660069D5C632B56F120EE9F3A86764247C"
          }
        }
      ]
    }
]]></sourcecode></figure>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com.",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns2.example.net."
          }
        },
        {
          "name": "@",
          "type": "dnskey",
          "rdata": {
            "flags": 257,
            "protocol": 3,
            "algorithm": 5,
            "public_key": "AwEAAddt2AkL4RJ9Ao6LCWheg8"
          }
        }
      ]
    }
]]></sourcecode></figure>

</section>
<section anchor="operational-controls-1"><name>Operational controls</name>

<section anchor="ttl-1"><name>TTL</name>

<t>The TTL controls the caching behavior of DNS resource records (see Section 5 of <xref target="RFC9499"/>). Typically a default TTL is defined by the registry operator. In some use cases it is desirable for a client to change the TTL value.</t>

<t>A client <bcp14>MAY</bcp14> assign "ttl" to the dns_controls of an RR set which is intended to be present in the parent sides DNS. A server <bcp14>MAY</bcp14> ignore these values e.g. for policy reasons.</t>

<t>Example:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "a",
          "rdata": {
            "address": "192.0.2.1"
          }
        },
        {
          "name": "@",
          "type": "aaaa",
          "rdata": {
            "address": "2001:DB8::1"
          }
        }
      ],
      "dns_controls": {
        "ttl": {
          "a": 86400,
          "aaaa": 3600
       }
      }
    }
]]></sourcecode></figure>

</section>
<section anchor="maximum-signature-lifetime"><name>Maximum signature lifetime</name>

<t>Maximum signature lifetime (maximum_signature_lifetime) describes the maximum number of seconds after signature generation a parents signature on signed DNS information should expire. The maximum_signature_lifetime value applies to the RRSIG resource record over the signed DNS RR. See Section 3 of <xref target="RFC4034"/> for information on the RRSIG resource record.</t>

<t>A client <bcp14>MAY</bcp14> assign "maximum_signature_lifetime" to the dns_controls of an RR set which is intended to be signed on the parent side. A server <bcp14>MAY</bcp14> ignore these values, e.g. for policy reasons.</t>

<t>Example:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns2.example.net."
          }
        },
        {
          "name": "@",
          "type": "ds",
          "rdata": {
            "key_tag": 12345,
            "algorithm": 13,
            "digest_type": 2,
            "digest": "BE74359954660069D5C632B56F120EE9F3A86764247C"
          }
        }
      ],
      "dns_controls": {
        "maximum_signature_lifetime": {
          "ds": 86400
        }
      }
    }
]]></sourcecode></figure>

</section>
</section>
<section anchor="authoritative-dns-data"><name>Authoritative DNS data</name>

<t>A server <bcp14>MAY</bcp14> support additional RR types, e.g. to support delegation-less provisioning. By doing this the registry operators name servers becomes authoritative for the registered domain. A server <bcp14>MUST</bcp14> consider resource records designed for delegation - including DNSSEC - and resource records representing authoritative data - except for GLUE RR - mutual exclusive.</t>

<figure><sourcecode type="json"><![CDATA[
{
  "@type": "Domain",
  "name": "example.com",
  "dns": [
    {
      "name": "@",
      "type": "a",
      "rdata": {
        "address": "192.0.2.1"
      }
    },
    {
      "name": "www.example.com.",
      "type": "a",
      "rdata": {
        "address": "192.0.2.1"
      }
    },
    {
      "name": "@",
      "type": "aaaa",
      "rdata": {
        "address": "2001:DB8::1"
      }
    },
    {
      "name": "www.example.com.",
      "type": "a",
      "rdata": {
        "address": "2001:DB8::1"
      }
    },
    {
      "name": "@",
      "type": "mx",
      "rdata": {
        "preference": "10",
        "exchange": "mx1.example.com"
      }
    },
    {
      "name": "mx1.example.com.",
      "type": "a",
      "rdata": {
        "address": "192.0.2.2"
      }
    },
    {
      "name": "@",
      "type": "mx",
      "rdata": {
        "preference": "20",
        "exchange": "mx2.example.net"
      }
    },
    {
      "name": "@",
      "type": "txt",
      "rdata": {
        "txt_data": "v=spf1 -all"
      }
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="discoverability"><name>Discoverability</name>

<t>The server <bcp14>MUST</bcp14> provide the following information per profile in the discovery document in section 10 of <xref target="I-D.draft-ietf-rpp-requirements"/>:</t>

<t><list style="symbols">
  <t>A list of supported resource record types</t>
  <t>A list of applicable dns_controls</t>
  <t>Minimum, maximum and default values for dns_controls</t>
</list></t>

<t>TODO: Needs rewrite after definition of the discovery document</t>

</section>
<section anchor="epp-compatibility-considerations"><name>EPP compatibility considerations</name>

<t>TODO</t>

</section>
<section anchor="conventions-and-definitions"><name>Conventions and Definitions</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<section anchor="authoritative-data"><name>Authoritative data</name>

<t>Allowing to store authoritative resource records (see section 4.4 of this document) in the registry provides faster resolution. However, if not done properly situations may occur where the data served authoritative should have been delegated. RPP servers <bcp14>MUST</bcp14> take precautions to not store authoritative and non-authoritative data at the same time.</t>

<t>The types and number of authoritative records can result in uncontrolled growth of the registries zone file and eventually exhaust the hardware resources of the registries name server. RPP servers <bcp14>SHOULD</bcp14> consider limiting the amount of authoritative records and carefully choose which record types are allowed.</t>

</section>
<section anchor="host-references-within-the-rdata-field"><name>Host references within the rdata field</name>

<t>Some RR types (NS, MX and others) use references to host names which can be categorized into three categories:</t>

<t>Domain internal references
are references to a subordinate host name of the domain. E.g. "ns.example.com" is an domain internal reference when used as a name server for "example.com".</t>

<t>Registry internal references
are references to a host name within the same registry. E.g. "ns.example.com" is an domain internal reference when used as a name server for "example2.com".</t>

<t>Registry external references
are references to a host name outside of the registry. E.g. "ns.example.net" is an domain internal reference when used as a name server for "example.com".</t>

<t>Deletion of a host name while still being referenced may lead to severe security risks for the referencing domain.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document has no IANA actions.</t>

</section>
<section anchor="appendix-a-examples-from-current-implementations"><name>Appendix A. Examples from current implementations</name>

<section anchor="epp"><name>EPP</name>

<section anchor="create-domain-using-host-attributes-example"><name>Create domain using host attributes example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.com</domain:name>
        <domain:period unit="y">1</domain:period>
        <domain:ns>
          <domain:hostAttr>
            <domain:hostName>ns1.example.com</domain:hostName>
            <domain:hostAddr ip="v4">192.0.2.1</domain:hostAddr>
            <domain:hostAddr ip="v6">2001:db8::1</domain:hostAddr>
          </domain:hostAttr>
          <domain:hostAttr>
            <domain:hostName>ns2.example.com</domain:hostName>
            <domain:hostAddr ip="v4">192.0.2.2</domain:hostAddr>
          </domain:hostAttr>
        </domain:ns>
        <domain:registrant>registrantID</domain:registrant>
        <domain:contact type="admin">adminID</domain:contact>
        <domain:contact type="tech">techID</domain:contact>
      </domain:create>
    </create>
    <extension>
      <secDNS:create
          xmlns:secDNS="urn:ietf:params:xml:ns:secDNS-1.1">
        <secDNS:maxSigLife>604800</secDNS:maxSigLife>
        <secDNS:dsData>
          <secDNS:keyTag>12345</secDNS:keyTag>
          <secDNS:alg>13</secDNS:alg>
          <secDNS:digestType>2</secDNS:digestType>
          <secDNS:digest>
            BE74359954660069D5C632B56F120EE9F3A86764247
          </secDNS:digest>
        </secDNS:dsData>
      </secDNS:create>
      <ttl:create xmlns:ttl="urn:ietf:params:xml:ns:epp:ttl-1.0">
        <ttl:ttl for="NS">3600</ttl:ttl>
      </ttl:create>
    </extension>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "@type": "Domain",
  "name": "example.com",
  "...": "",
  "dns": [
    {
      "name": "@",
      "type": "ns",
      "rdata": {
        "nsdname": "ns1.example.com"
      }
    },
    {
      "name": "ns1.example.com",
      "type": "a",
      "rdata": {
        "address": "192.0.2.1"
      }
    },
    {
      "name": "ns1.example.com",
      "type": "aaaa",
      "rdata": {
        "address": "2001:db8::1"
      }
    },
    {
      "name": "@",
      "type": "ns",
      "rdata": {
        "nsdname": "ns2.example.com"
      }
    },
    {
      "name": "ns2.example.com",
      "type": "a",
      "rdata": {
        "address": "192.0.2.2"
      }
    },
    {
      "name": "@",
      "type": "ds",
      "rdata": {
        "key_tag": 12345,
        "algorithm": 13,
        "digest_type": 2,
        "digest": "BE74359954660069D5C632B56F120EE9F3A86764247"
      }
    }
  ],
  "dns_controls": {
    "maximum_signature_lifetime": {
      "ds": 604800
    },
    "ttl": {
      "ns": 3600
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="create-domain-using-host-object-example"><name>Create domain using host object example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.com</domain:name>
        <domain:period unit="y">1</domain:period>
        <domain:ns>
          <domain:hostObj>ns1.example.net</domain:hostObj>
          <domain:hostObj>ns2.example.net</domain:hostObj>
        </domain:ns>
        <domain:registrant>registrantID</domain:registrant>
        <domain:contact type="admin">adminID</domain:contact>
        <domain:contact type="tech">techID</domain:contact>
      </domain:create>
    </create>
    <extension>
      <secDNS:create
          xmlns:secDNS="urn:ietf:params:xml:ns:secDNS-1.1">
        <secDNS:maxSigLife>604800</secDNS:maxSigLife>
        <secDNS:dsData>
          <secDNS:keyTag>12345</secDNS:keyTag>
          <secDNS:alg>13</secDNS:alg>
          <secDNS:digestType>2</secDNS:digestType>
          <secDNS:digest>
            BE74359954660069D5C632B56F120EE9F3A86764247C
          </secDNS:digest>
        </secDNS:dsData>
      </secDNS:create>
      <ttl:create xmlns:ttl="urn:ietf:params:xml:ns:epp:ttl-1.0">
        <ttl:ttl for="NS">3600</ttl:ttl>
      </ttl:create>
    </extension>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "@type": "Domain",
  "name": "example.com",
  "...": "",
  "_object_references": {
    "nameserver": [
      {
        "name": "ns1.example.net.",
        "href": "https://rpp.example/nameservers/ns1.example.net",
        "rel": "nameserver"
      },
      {
        "name": "ns2.example.net.",
        "href": "https://rpp.example/nameservers/ns2.example.net",
        "rel": "nameserver"
      }
    ]
  },
  "dns": [
    {
      "name": "@",
      "type": "ds",
      "rdata": {
        "key_tag": 12345,
        "algorithm": 13,
        "digest_type": 2,
        "digest": "BE74359954660069D5C632B56F120EE9F3A86764247C"
      }
    }
  ],
  "dns_controls": {
    "maximum_signature_lifetime": {
      "ds": 604800
    },
    "ttl": {
      "ns": 3600
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="create-host-object-example"><name>Create host object example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <host:create
       xmlns:host="urn:ietf:params:xml:ns:host-1.0">
        <host:name>ns1.example.com</host:name>
        <host:addr ip="v4">192.0.2.2</host:addr>
        <host:addr ip="v4">192.0.2.29</host:addr>
        <host:addr ip="v6">1080:0:0:0:8:800:200C:417A</host:addr>
      </host:create>
    </create>
    <clTRID>ABC-12345</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<figure><sourcecode type="json"><![CDATA[
{
    "@type": "Host",
    "...": "",
    "name": "ns1.example.com",
    "dns": [
        {
            "name": "@",
            "type": "a",
            "rdata": {
                "address": "192.0.2.2"
            }
        },
        {
            "name": "@",
            "type": "a",
            "rdata": {
                "address": "192.0.2.29"
            }
        },
        {
            "name": "@",
            "type": "aaaa",
            "rdata": {
                "address": "1080:0:0:0:8:800:200C:417A"
            }
        }
    ]
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="free-registry-for-enum-and-domains-fred"><name>Free Registry for ENUM and Domains (FRED)</name>

<t>FRED is an open source registry software developed by CZ.NIC</t>

<section anchor="create-domain-example"><name>Create domain example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="utf-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <domain:create
          xmlns:domain="http://www.nic.cz/xml/epp/domain-1.4">
        <domain:name>example.cz</domain:name>
        <domain:registrant>registrantID</domain:registrant>
        <domain:admin>adminID</domain:admin>
        <domain:nsset>nssetID</domain:nsset>
        <domain:keyset>keysetID</domain:keyset>
      </domain:create>
    </create>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

</section>
<section anchor="create-nsset-example"><name>Create nsset example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="utf-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <nsset:create
          xmlns:nsset="http://www.nic.cz/xml/epp/nsset-1.2">
        <nsset:id>nssetID</nsset:id>
        <nsset:ns>
          <nsset:name>ns1.example.cz</nsset:name>
          <nsset:addr>192.0.2.1</nsset:addr>
          <nsset:addr>192.0.2.2</nsset:addr>
        </nsset:ns>
        <nsset:ns>
          <nsset:name>nameserver-example.cz</nsset:name>
        </nsset:ns>
        <nsset:tech>techID</nsset:tech>
        <nsset:reportlevel>1</nsset:reportlevel>
      </nsset:create>
    </create>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

</section>
<section anchor="create-keyset-example"><name>Create keyset example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="utf-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <keyset:create
          xmlns:keyset="http://www.nic.cz/xml/epp/keyset-1.3">
        <keyset:id>keysetID</keyset:id>
        <keyset:dnskey>
          <keyset:flags>257</keyset:flags>
          <keyset:protocol>3</keyset:protocol>
          <keyset:alg>5</keyset:alg>
          <keyset:pubKey>AwEAAddt2AkL4RJ9Ao6LCWheg8</keyset:pubKey>
        </keyset:dnskey>
        <keyset:dnskey>
          <keyset:flags>257</keyset:flags>
          <keyset:protocol>3</keyset:protocol>
          <keyset:alg>5</keyset:alg>
          <keyset:pubKey>AwEAAddt2AkL4RJ9Ao6LCWheg9</keyset:pubKey>
        </keyset:dnskey>
        <keyset:tech>techID</keyset:tech>
      </keyset:create>
    </create>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<t>TODO</t>

<figure><sourcecode type="json"><![CDATA[
{}
]]></sourcecode></figure>

</section>
</section>
<section anchor="realtime-registry-interface-rri"><name>Realtime Registry Interface (RRI)</name>

<t>RRI is a proprietary protocol developed by DENIC</t>

<section anchor="create-domain-with-name-servers-example"><name>Create domain with name servers example</name>

<t>RRI XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<registry-request
    xmlns="http://registry.denic.de/global/5.0"
    xmlns:domain="http://registry.denic.de/domain/5.0"
    xmlns:dnsentry="http://registry.denic.de/dnsentry/5.0">
  <domain:create>
    <domain:handle>example.de</domain:handle>
    <domain:contact role="holder">registrantID</domain:contact>
    <dnsentry:dnsentry xsi:type="dnsentry:NS">
      <dnsentry:owner>example.de</dnsentry:owner>
      <dnsentry:rdata>
        <dnsentry:nameserver>ns1.example.com</dnsentry:nameserver>
      </dnsentry:rdata>
    </dnsentry:dnsentry>
    <dnsentry:dnsentry xsi:type="dnsentry:NS">
      <dnsentry:owner>example.de</dnsentry:owner>
      <dnsentry:rdata>
        <dnsentry:nameserver>ns1.example.de</dnsentry:nameserver>
        <dnsentry:address>192.0.2.1</dnsentry:address>
      </dnsentry:rdata>
    </dnsentry:dnsentry>
    <dnsentry:dnsentry xsi:type="dnsentry:DNSKEY">
      <dnsentry:owner>example.de.</dnsentry:owner>
      <dnsentry:rdata>
        <dnsentry:flags>257</dnsentry:flags>
        <dnsentry:protocol>3</dnsentry:protocol>
        <dnsentry:algorithm>5</dnsentry:algorithm>
        <dnsentry:publicKey>
          AwEAAddt2AkL4RJ9Ao6LCWheg8
        </dnsentry:publicKey>
      </dnsentry:rdata>
    </dnsentry:dnsentry>
  </domain:create>
  <ctid>clTRID-1234</ctid>
</registry-request>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "@type": "Domain",
  "name": "example.de",
  "...": "",
  "dns": [
    {
      "name": "@",
      "type": "ns",
      "rdata": {
        "nsdname": "ns1.example.com"
      }
    },
    {
      "name": "@",
      "type": "ns",
      "rdata": {
        "nsdname": "ns1.example.de"
      }
    },
    {
      "name": "ns1.example.de",
      "type": "a",
      "rdata": {
        "address": "192.0.2.1"
      }
    },
    {
      "name": "@",
      "type": "dnskey",
      "rdata": {
        "flags": 257,
        "protocol": 3,
        "algorithm": 5,
        "public_key": "AwEAAddt2AkL4RJ9Ao6LCWheg8"
      }
    }
  ]
}
]]></sourcecode></figure>

</section>
<section anchor="create-domain-without-delegation-example"><name>Create domain without delegation example</name>

<t>RRI XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<registry-request
    xmlns="http://registry.denic.de/global/5.0"
    xmlns:domain="http://registry.denic.de/domain/5.0"
    xmlns:dnsentry="http://registry.denic.de/dnsentry/5.0">
  <domain:update>
    <domain:handle>example.de</domain:handle>
    <domain:contact role="holder">registrantID</domain:contact>
    <dnsentry:dnsentry xsi:type="dnsentry:A">
      <dnsentry:owner>example.de</dnsentry:owner>
      <dnsentry:rdata>
        <dnsentry:address>192.0.2.1</dnsentry:address>
      </dnsentry:rdata>
    </dnsentry:dnsentry>
  </domain:update>
  <ctid>clTRID-1234</ctid>
</registry-request>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "@type": "Domain",
  "name": "example.de",
    "...": "",
  "dns": [
    {
      "name": "@",
      "type": "a",
      "rdata": {
        "address": "192.0.2.1"
      }
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="rdap"><name>RDAP</name>

<section anchor="domain-object"><name>Domain object</name>

<t>Registration Data Access Protocol (RDAP) is described in <xref target="RFC9083"/>. An extention proposing Time-to-Live (TTL) values is described in
<xref target="I-D.draft-brown-rdap-ttl-extension"/> and is close to adoption in the regext working group.</t>

<t>RDAP JSON:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "objectClassName": "domain",
  "ldhName": "example.com",
  "nameservers": [
    {
      "objectClassName": "nameserver",
      "ldhName": "ns1.example.com",
      "ipAddresses": {
        "v4": ["192.0.2.1"],
        "v6": ["2001:db8::1"]
      }
    },
    {
      "objectClassName": "nameserver",
      "ldhName": "ns2.example.com",
      "ipAddresses": {
        "v4": ["192.0.2.2"]
      }
    }
  ],
  "secureDNS": {
    "delegationSigned": true,
    "maxSigLife": 604800,
    "dsData": [
      {
        "keyTag": 12345,
        "algorithm": 13,
        "digestType": 2,
        "digest": "BE74359954660069D5C632B56F120EE9F3A86764247C"
      }
    ]
  },
  "ttl": [
       {
         "types": [ "NS" ],
         "value": 3600
       }
  ],
  "events": [
    {
      "eventAction": "registration",
      "eventDate": "2025-01-01T00:00:00Z"
    },
    {
      "eventAction": "expiration",
      "eventDate": "2035-01-01T00:00:00Z"
    }
  ],
  "status": ["active"]
}
]]></sourcecode></figure>

</section>
</section>
</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC1035">
  <front>
    <title>Domain names - implementation and specification</title>
    <author fullname="P. Mockapetris" initials="P." surname="Mockapetris"/>
    <date month="November" year="1987"/>
    <abstract>
      <t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System. It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="13"/>
  <seriesInfo name="RFC" value="1035"/>
  <seriesInfo name="DOI" value="10.17487/RFC1035"/>
</reference>

<reference anchor="RFC5731">
  <front>
    <title>Extensible Provisioning Protocol (EPP) Domain Name Mapping</title>
    <author fullname="S. Hollenbeck" initials="S." surname="Hollenbeck"/>
    <date month="August" year="2009"/>
    <abstract>
      <t>This document describes an Extensible Provisioning Protocol (EPP) mapping for the provisioning and management of Internet domain names stored in a shared central repository. Specified in XML, the mapping defines EPP command syntax and semantics as applied to domain names. This document obsoletes RFC 4931. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="69"/>
  <seriesInfo name="RFC" value="5731"/>
  <seriesInfo name="DOI" value="10.17487/RFC5731"/>
</reference>

<reference anchor="RFC5732">
  <front>
    <title>Extensible Provisioning Protocol (EPP) Host Mapping</title>
    <author fullname="S. Hollenbeck" initials="S." surname="Hollenbeck"/>
    <date month="August" year="2009"/>
    <abstract>
      <t>This document describes an Extensible Provisioning Protocol (EPP) mapping for the provisioning and management of Internet host names stored in a shared central repository. Specified in XML, the mapping defines EPP command syntax and semantics as applied to host names. This document obsoletes RFC 4932. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="69"/>
  <seriesInfo name="RFC" value="5732"/>
  <seriesInfo name="DOI" value="10.17487/RFC5732"/>
</reference>

<reference anchor="RFC5910">
  <front>
    <title>Domain Name System (DNS) Security Extensions Mapping for the Extensible Provisioning Protocol (EPP)</title>
    <author fullname="J. Gould" initials="J." surname="Gould"/>
    <author fullname="S. Hollenbeck" initials="S." surname="Hollenbeck"/>
    <date month="May" year="2010"/>
    <abstract>
      <t>This document describes an Extensible Provisioning Protocol (EPP) extension mapping for the provisioning and management of Domain Name System security (DNSSEC) extensions for domain names stored in a shared central repository. Specified in XML, this mapping extends the EPP domain name mapping to provide additional features required for the provisioning of DNS security extensions. This document obsoletes RFC 4310. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5910"/>
  <seriesInfo name="DOI" value="10.17487/RFC5910"/>
</reference>

<reference anchor="RFC9803">
  <front>
    <title>Extensible Provisioning Protocol (EPP) Mapping for DNS Time-to-Live (TTL) Values</title>
    <author fullname="G. Brown" initials="G." surname="Brown"/>
    <date month="June" year="2025"/>
    <abstract>
      <t>This document describes an extension to the Extensible Provisioning
Protocol (EPP) that allows EPP clients to manage the Time-to-Live
(TTL) value for domain name delegation records.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9803"/>
  <seriesInfo name="DOI" value="10.17487/RFC9803"/>
</reference>

<reference anchor="RFC3596">
  <front>
    <title>DNS Extensions to Support IP Version 6</title>
    <author fullname="S. Thomson" initials="S." surname="Thomson"/>
    <author fullname="C. Huitema" initials="C." surname="Huitema"/>
    <author fullname="V. Ksinant" initials="V." surname="Ksinant"/>
    <author fullname="M. Souissi" initials="M." surname="Souissi"/>
    <date month="October" year="2003"/>
    <abstract>
      <t>This document defines the changes that need to be made to the Domain Name System (DNS) to support hosts running IP version 6 (IPv6). The changes include a resource record type to store an IPv6 address, a domain to support lookups based on an IPv6 address, and updated definitions of existing query types that return Internet addresses as part of additional section processing. The extensions are designed to be compatible with existing applications and, in particular, DNS implementations themselves. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="88"/>
  <seriesInfo name="RFC" value="3596"/>
  <seriesInfo name="DOI" value="10.17487/RFC3596"/>
</reference>

<reference anchor="RFC4034">
  <front>
    <title>Resource Records for the DNS Security Extensions</title>
    <author fullname="R. Arends" initials="R." surname="Arends"/>
    <author fullname="R. Austein" initials="R." surname="Austein"/>
    <author fullname="M. Larson" initials="M." surname="Larson"/>
    <author fullname="D. Massey" initials="D." surname="Massey"/>
    <author fullname="S. Rose" initials="S." surname="Rose"/>
    <date month="March" year="2005"/>
    <abstract>
      <t>This document is part of a family of documents that describe the DNS Security Extensions (DNSSEC). The DNS Security Extensions are a collection of resource records and protocol modifications that provide source authentication for the DNS. This document defines the public key (DNSKEY), delegation signer (DS), resource record digital signature (RRSIG), and authenticated denial of existence (NSEC) resource records. The purpose and format of each resource record is described in detail, and an example of each resource record is given.</t>
      <t>This document obsoletes RFC 2535 and incorporates changes from all updates to RFC 2535. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4034"/>
  <seriesInfo name="DOI" value="10.17487/RFC4034"/>
</reference>

<reference anchor="RFC9083">
  <front>
    <title>JSON Responses for the Registration Data Access Protocol (RDAP)</title>
    <author fullname="S. Hollenbeck" initials="S." surname="Hollenbeck"/>
    <author fullname="A. Newton" initials="A." surname="Newton"/>
    <date month="June" year="2021"/>
    <abstract>
      <t>This document describes JSON data structures representing registration information maintained by Regional Internet Registries (RIRs) and Domain Name Registries (DNRs). These data structures are used to form Registration Data Access Protocol (RDAP) query responses. This document obsoletes RFC 7483.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="95"/>
  <seriesInfo name="RFC" value="9083"/>
  <seriesInfo name="DOI" value="10.17487/RFC9083"/>
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC8484">
  <front>
    <title>DNS Queries over HTTPS (DoH)</title>
    <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
    <author fullname="P. McManus" initials="P." surname="McManus"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This document defines a protocol for sending DNS queries and getting DNS responses over HTTPS. Each DNS query-response pair is mapped into an HTTP exchange.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8484"/>
  <seriesInfo name="DOI" value="10.17487/RFC8484"/>
</reference>

<reference anchor="RFC9250">
  <front>
    <title>DNS over Dedicated QUIC Connections</title>
    <author fullname="C. Huitema" initials="C." surname="Huitema"/>
    <author fullname="S. Dickinson" initials="S." surname="Dickinson"/>
    <author fullname="A. Mankin" initials="A." surname="Mankin"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This document describes the use of QUIC to provide transport confidentiality for DNS. The encryption provided by QUIC has similar properties to those provided by TLS, while QUIC transport eliminates the head-of-line blocking issues inherent with TCP and provides more efficient packet-loss recovery than UDP. DNS over QUIC (DoQ) has privacy properties similar to DNS over TLS (DoT) specified in RFC 7858, and latency characteristics similar to classic DNS over UDP. This specification describes the use of DoQ as a general-purpose transport for DNS and includes the use of DoQ for stub to recursive, recursive to authoritative, and zone transfer scenarios.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9250"/>
  <seriesInfo name="DOI" value="10.17487/RFC9250"/>
</reference>

<reference anchor="RFC9499">
  <front>
    <title>DNS Terminology</title>
    <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
    <author fullname="K. Fujiwara" initials="K." surname="Fujiwara"/>
    <date month="March" year="2024"/>
    <abstract>
      <t>The Domain Name System (DNS) is defined in literally dozens of different RFCs. The terminology used by implementers and developers of DNS protocols, and by operators of DNS systems, has changed in the decades since the DNS was first defined. This document gives current definitions for many of the terms used in the DNS in a single document.</t>
      <t>This document updates RFC 2308 by clarifying the definitions of "forwarder" and "QNAME". It obsoletes RFC 8499 by adding multiple terms and clarifications. Comprehensive lists of changed and new definitions can be found in Appendices A and B.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="219"/>
  <seriesInfo name="RFC" value="9499"/>
  <seriesInfo name="DOI" value="10.17487/RFC9499"/>
</reference>


<reference anchor="I-D.draft-ietf-deleg">
   <front>
      <title>Extensible Delegation for DNS</title>
      <author fullname="Tim April" initials="T." surname="April">
         <organization>Google, LLC</organization>
      </author>
      <author fullname="Petr Špaček" initials="P." surname="Špaček">
         <organization>ISC</organization>
      </author>
      <author fullname="Ralf Weber" initials="R." surname="Weber">
         <organization>Akamai Technologies</organization>
      </author>
      <author fullname="David C Lawrence" initials="" surname="Lawrence">
         <organization>Salesforce</organization>
      </author>
      <date day="7" month="July" year="2025"/>
      <abstract>
	 <t>   A delegation in the Domain Name System (DNS) is a mechanism that
   enables efficient and distributed management of the DNS namespace.
   It involves delegating authority over subdomains to specific DNS
   servers via NS records, allowing for a hierarchical structure and
   distributing the responsibility for maintaining DNS records.

   An NS record contains the hostname of the nameserver for the
   delegated namespace.  Any facilities of that nameserver must be
   discovered through other mechanisms.  This document proposes a new
   extensible DNS record type, DELEG, for delegation of the authority
   for a domain.  Future documents then can use this mechanism to use
   additional information about the delegated namespace and the
   capabilities of authoritative nameservers for the delegated
   namespace.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-deleg-01"/>

</reference>


<reference anchor="I-D.draft-ietf-rpp-requirements">
   <front>
      <title>RESTful Provisioning Protocol (RPP) - Requirements</title>
      <author fullname="Maarten Wullink" initials="M." surname="Wullink">
         <organization>SIDN Labs</organization>
      </author>
      <author fullname="Paweł Kowalik" initials="P." surname="Kowalik">
         <organization>DENIC</organization>
      </author>
      <date day="30" month="June" year="2025"/>
      <abstract>
	 <t>   This document describes the requirement for the development of the
   RESTful Provisioning Protocol (RPP).

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-rpp-requirements-01"/>

</reference>


<reference anchor="I-D.draft-brown-rdap-ttl-extension">
   <front>
      <title>RDAP Extension for DNS Time-To-Live (TTL Values)</title>
      <author fullname="Gavin Brown" initials="G." surname="Brown">
         <organization>ICANN</organization>
      </author>
      <date day="17" month="June" year="2025"/>
      <abstract>
	 <t>   This document describes an extension to the Registration Data Access
   Protocol ([RFC9083]) which allows the Time-To-Live (TTL) values for
   relevant DNS record types to be included in RDAP responses.

About this draft

   This note is to be removed before publishing as an RFC.

   The source for this draft, and an issue tracker, may can be found at
   https://github.com/gbxyz/rdap-ttl-extension.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-brown-rdap-ttl-extension-03"/>

</reference>




    </references>

</references>


<?line 1108?>

<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

</section>


  </back>

<!-- ##markdown-source:
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
vCiT7kfn/wANvRXF64UAAA==

-->

</rfc>
