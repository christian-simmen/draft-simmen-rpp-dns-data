<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-simmen-rpp-dns-data-00" category="info" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="RPP DNS data representation">DNS data representation for use in RESTful Provisioning Protocol (RPP)</title>

    <author fullname="Christian Simmen">
      <organization>DENIC eG</organization>
      <address>
        <postal>
          <country>DE</country>
        </postal>
        <email>simmen@denic.de</email>
      </address>
    </author>
    <author fullname="Pawel Kowalik">
      <organization>DENIC eG</organization>
      <address>
        <postal>
          <country>DE</country>
        </postal>
        <email>pawel.kowalik@denic.de</email>
      </address>
    </author>

    <date year="2025" month="July" day="07"/>

    <area>Applications and Real-Time</area>
    <workgroup>rpp</workgroup>
    <keyword>rpp</keyword> <keyword>epp</keyword> <keyword>json</keyword> <keyword>provisioning</keyword> <keyword>host</keyword>

    <abstract>


<?line 84?>

<t>This document proposes a unified, extensible JSON representation for DNS resource records for use in the RESTful Provisioning Protocol (RPP). The aim is to create a single, consistent structure for provisioning all DNS-related data - including delegation, DNSSEC, and other record types - that directly mirrors the DNS data model and being mappable to existing EPP model of requests and responses same time. This approach simplifies the adoption of both current and future DNS features by aligning the provisioning format with the target system, thereby streamlining the management of domain names and related objects within RPP.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        The latest revision of this draft can be found at <eref target="https://github.com/christian-simmen/draft-simmen-rpp-dns-data"/>.
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-simmen-rpp-dns-data/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        WG Working Group mailing list (<eref target="mailto:rpp@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/rpp/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/rpp/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/christian-simmen/draft-simmen-rpp-dns-data"/>.</t>
    </note>


  </front>

  <middle>


<?line 88?>

<section anchor="introduction"><name>Introduction</name>

<t>The Extensible Provisioning Protocol (EPP) manages DNS delegation data using distinct object types and extensions. Host Objects <xref target="RFC5732"/> are used for name servers (NS records) and their associated addresses (glue A/AAAA records), while DNSSEC data is handled via a separate security extension <xref target="RFC5910"/>. Name server information can be also directly attached to a domain name as a set of Host Attributes <xref target="RFC5731"/>. More recently, control over Time-to-Live (TTL) values was added through another extension <xref target="RFC9803"/>.</t>

<t>While functional, this segmented approach creates complexity. The DNS landscape itself is evolving, with new transport protocols like DNS-over-HTTPS <xref target="RFC8484"/> and DNS-over-QUIC <xref target="RFC9250"/> driving the need for more sophisticated delegation information, such as the proposed DELEG record type <xref target="I-D.draft-ietf-deleg"/>.</t>

<t>Some registry operators have developed their own proprietary solutions. These include grouping name servers into "sets" for easier management or allowing domains to be provisioned with arbitrary DNS resource records (RR) without formal delegation, which is expanding on Host Attribute model with other resource record types.</t>

<t>The development of the RESTful Provisioning Protocol (RPP) provides an opportunity to address this fragmentation. This document proposes a unified data representation for all DNS-related information, specified in a format that directly mirrors DNS resource records. This approach is not intended to influence existing registry data models, but rather to offer a flexible and consistent structure for the data in the protocol. By unifying the representation of delegation data (NS, A/AAAA glue), DNSSEC information, and other record types, this model can be applied across various contexts. It is designed to be equally applicable whether a registry uses separate host objects, host attributes within a domain, or more abstract concepts like name server sets, thereby simplifying implementation and ensuring adaptability for future developments in the DNS.</t>

</section>
<section anchor="domain-names-in-dns"><name>Domain Names in DNS</name>

<t>DNS domain names are hierarchically ordered label separated by a dot ".". Each label represent the delegation of a subordinate namespace or a host name. DNS resource records <xref target="RFC1035"/> are expressed as a dataset containing:</t>

<t>"NAME" "CLASS" "TYPE" "TTL" "RDLENGTH" "RDATA"</t>

<t>A set of resource records describes the behavior of a namespace. Each resource record shares the same top level format.</t>

<t>NAME      The owner name of the DNS entry which <bcp14>MAY</bcp14> be the domain itself or a subordinate hostname.</t>

<t>CLASS     The RR CLASS</t>

<t>TYPE      The RR TYPE of data present in the RDATA field.</t>

<t>TTL       Time interval a RR may be cached by name servers</t>

<t>RDLENGTH  The length of the RDATA field. RDLENGTH will be safely ignored in RPP</t>

<t>RDATA     The actual payload data. Structures defer for each type.</t>

</section>
<section anchor="json-representation"><name>JSON representation</name>

<section anchor="rules"><name>Rules</name>

<section anchor="dns-data-extending-an-domain-object"><name>DNS data extending an domain object</name>
<t>Delegation data, as well as DNSSEC data, is intended to find it's way into the parent side DNS servers. Because of the strong connection to the provisioned domain object and DNS servers both aspects should be visible in the RPP data model. Therefore the domain object is extended by an array of DNS entries. The properties of an object in this array <bcp14>MUST</bcp14> be a representation of the top level format as described in section 3.2.1 of <xref target="RFC1035"/>. All keys <bcp14>MUST</bcp14> be lowercase. Whitespaces <bcp14>MUST</bcp14> be translated to underscores ("_").</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "",
          "class": "",
          "type": "",
          "ttl": "",
          "rdata": {}
        }
      ]
    }
]]></sourcecode></figure>

</section>
<section anchor="dns-record-structure-representation"><name>DNS record structure representation</name>

<section anchor="name"><name>name</name>

<t>The owner name of the DNS entry which <bcp14>MAY</bcp14> be the domain itself or a subordinate hostname. A server <bcp14>MUST NOT</bcp14> accept a NAME which is not a subordinate label to the provisioned domain name.</t>

<t>A server <bcp14>MUST</bcp14> accept values as "@", "relative names" and fully qualified domain names (FQDN).</t>

<t>"@" <bcp14>MUST</bcp14> be interpreted as the provisioned domain name.</t>

<t>"relative names" <bcp14>MUST</bcp14> be appended by the server with the provisioned domain name.</t>

<t>"FQDN" identified by a trailing dot (".") <bcp14>MUST NOT</bcp14> be interpreted by the server. A server <bcp14>MUST</bcp14> check if the provided name is a subordinate to the provisioned domain, or the domain itself.</t>

<t>Example:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "a",
          "rdata": {
            "address": "192.0.2.1"
          }
        },
        {
          "name": "www",
          "type": "a",
          "rdata": {
            "address": "192.0.2.2"
          }
        },
        {
          "name": "web.example.com.",
          "type": "a",
          "rdata": {
            "address": "192.0.2.3"
          }
        }
      ]
    }
]]></sourcecode></figure>

<t>The above example implies three resulting records:</t>

<t><list style="symbols">
  <t>An "A" RR for "example.com" ("@") set to 192.0.2.1.</t>
  <t>An "A" RR for "www.example.com" ("www" relative) set to 192.0.2.2.</t>
  <t>An "A" RR for "web.example.com" (FQDN) set to 192.0.2.3.</t>
</list></t>

</section>
<section anchor="class"><name>class</name>

<t>A client <bcp14>SHOULD</bcp14> omit the class. The server <bcp14>MUST</bcp14> assume "IN" as class of a transferred dataset and <bcp14>MAY</bcp14> decline other values. If present the value <bcp14>MUST</bcp14> be chosen from section 3.2.4. (CLASS values) of <xref target="RFC1035"/>.</t>

</section>
<section anchor="type"><name>type</name>

<t>The TYPE of data present in the RDATA. This also implies the expected fields in RDATA.
If present the value <bcp14>MUST</bcp14> chosen from section 3.2.2. (TYPE values) of <xref target="RFC1035"/> or other RFC describing the RR type. Values <bcp14>MUST</bcp14> be converted to lower case.</t>

</section>
<section anchor="ttl"><name>ttl</name>

<t>TTL is considered a operational control (see section 3.1.3 and section 4.3.1 of this document). A server <bcp14>MUST</bcp14> set a default value as TTL and <bcp14>MAY</bcp14> ignore other values send by a client.</t>

</section>
<section anchor="rdlength"><name>rdlength</name>

<t>RDLENGTH specifies the length of the RDATA field and will be ignored in RPP. A client <bcp14>MUST NOT</bcp14> include this field. A server <bcp14>MUST</bcp14> ignore this field if present.</t>

</section>
<section anchor="rdata"><name>rdata</name>

<t>The RDATA structure depends on the TYPE and <bcp14>MUST</bcp14> be expressed as a JSON object. Property names <bcp14>MUST</bcp14> follow the definition of the RDATA described by the corresponding RFC. Property names <bcp14>MUST</bcp14> be translated to lowercase. Whitespaces <bcp14>MUST</bcp14> be translated to underscores ("_").</t>

<t>Example:</t>

<t><list style="symbols">
  <t>Section 3.3.11 (NS RDATA format) of <xref target="RFC1035"/> describes the RDATA of a NS RR having a field named "NSDNAME".</t>
  <t>Section 3.3.9 (MX RDATA format) of <xref target="RFC1035"/> describes the RDATA of a MX RR having the field named "PREFERENCE", "EXCHANGE".</t>
</list></t>

<t>The resulting structure is therefore:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "mx",
          "rdata": {
            "preference": "10",
            "exchange": "mx1.example.net"
          }
        }
      ]
    }
]]></sourcecode></figure>

</section>
</section>
<section anchor="operational-controls"><name>Operational controls</name>

<t>In addition to the regular data a server <bcp14>MAY</bcp14> allow clients to control specific operational behavior. A client <bcp14>MAY</bcp14> add an JSON object with a number of "dns_controls" to the domain object.</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "<name>",
          "type": "<type>",
          "rdata": {
            "rdata_key": "<rdata_value>"
          }
        }
      ],
      "dns_controls": {
        "<named_control>": "<named_control_value>"
      }
    }
]]></sourcecode></figure>

</section>
<section anchor="future-dns-record-types"><name>Future DNS record types</name>

<t>With respect to an evolving DNS landscape new record types - including delegation - may emerge. Usually these record type will be defined and standardized for the DNS in first. Adopting future record types <bcp14>MUST</bcp14> be done using the rules described in section 3.1.2.6 of this document.</t>

</section>
</section>
</section>
<section anchor="use-cases"><name>Use cases</name>

<section anchor="domain-delegation-host-attribute"><name>Domain delegation (Host Attribute)</name>

<t>To enable domain delegation a server <bcp14>MUST</bcp14> support the "NS", "A" and "AAAA" record types (<xref target="RFC1035"/>, <xref target="RFC3596"/>).</t>

<t>In this delegation model the delegation information and corresponding DNS configuration is attached directly to a domain object. This is corresponding to Host Attribute delegation model of <xref target="RFC5731"/>.</t>

<t>A minimal delegation can be expressed by adding an array of name servers to the DNS data of a domain:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns2.example.net."
          }
        }
      ]
    }
]]></sourcecode></figure>

<t>If GLUE records are needed the client may add records of type "A" or "AAAA" :</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns.example.com"
          }
        },
        {
          "name": "ns.example.com.",
          "type": "a",
          "rdata": {
            "address": "192.0.2.1"
          }
        },
        {
          "name": "ns.example.com.",
          "type": "aaaa",
          "rdata": {
            "address": "2001:DB8::1"
          }
        }
      ]
    }
]]></sourcecode></figure>

</section>
<section anchor="host-object"><name>Host Object</name>

<t><xref target="RFC5731"/> specifies how domain delegation can be expressed as a relation to a separate provisioning object (Host Object), which carries the DNS configuration (name and glue records), with details specified in <xref target="RFC5732"/>.</t>

<t>To enable specification of Host Objexts, similar to direct domain delegation, a server <bcp14>MUST</bcp14> support the "NS", "A" and "AAAA" record types (<xref target="RFC1035"/>, <xref target="RFC3596"/>).</t>

<t>DNS configuration of Host Object is specified by NS, A and AAAA configuration within "dns" data structure:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Host",
      "name": "ns.example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns.example.com"
          }
        },
        {
          "name": "ns.example.com.",
          "type": "a",
          "rdata": {
            "address": "192.0.2.1"
          }
        },
        {
          "name": "ns.example.com.",
          "type": "aaaa",
          "rdata": {
            "address": "2001:DB8::1"
          }
        }
      ]
    }
]]></sourcecode></figure>

</section>
<section anchor="dnssec"><name>DNSSEC</name>

<t>To enable DNSSEC provisioning a server <bcp14>SHOULD</bcp14> support either "DS" or "DNSKEY" or both record types. The records <bcp14>MUST</bcp14> be added to the "dns" array of the domain. If provided with only "DNSKEY" a server <bcp14>MUST</bcp14> calculate the DS record. If both record types are provided a server <bcp14>MAY</bcp14> use the DNSKEY to validate the DS record.</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns2.example.net."
          }
        },
        {
          "name": "@",
          "type": "ds",
          "rdata": {
            "key_tag": 12345,
            "algorithm": 13,
            "digest_type": 2,
            "digest": "BE74359954660069D5C632B56F120EE9F3A86764247C"
          }
        }
      ]
    }
]]></sourcecode></figure>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com.",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns2.example.net."
          }
        },
        {
          "name": "@",
          "type": "dnskey",
          "rdata": {
            "flags": 257,
            "protocol": 3,
            "algorithm": 5,
            "public_key": "AwEAAddt2AkL4RJ9Ao6LCWheg8"
          }
        }
      ]
    }
]]></sourcecode></figure>

</section>
<section anchor="operational-controls-1"><name>Operational controls</name>

<section anchor="ttl-1"><name>TTL</name>

<t>The TTL controls the caching behavior of DNS resource records (see Section 5 of <xref target="RFC9499"/>). Typically a default TTL is defined by the registry operator. In some use cases it is desirable for a client to change the TTL value.</t>

<t>A client <bcp14>MAY</bcp14> assign "ttl" to the dns_controls of an RR set which is intended to be present in the parent sides DNS. A server <bcp14>MAY</bcp14> ignore these values e.g. for policy reasons.</t>

<t>Example:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "a",
          "rdata": {
            "address": "192.0.2.1"
          }
        },
        {
          "name": "@",
          "type": "aaaa",
          "rdata": {
            "address": "2001:DB8::1"
          }
        }
      ],
      "dns_controls": {
        "ttl": {
          "a": 86400,
          "aaaa": 3600
       }
      }
    }
]]></sourcecode></figure>

</section>
<section anchor="maximum-signature-lifetime"><name>Maximum signature lifetime</name>

<t>Maximum signature lifetime (maximum_signature_lifetime) describes the maximum number of seconds after signature generation a parents signature on signed DNS information should expire. The maximum_signature_lifetime value applies to the RRSIG resource record over the signed DNS RR. See Section 3 of <xref target="RFC4034"/> for information on the RRSIG resource record.</t>

<t>A client <bcp14>MAY</bcp14> assign "maximum_signature_lifetime" to the dns_controls of an RR set which is intended to be signed on the parent side. A server <bcp14>MAY</bcp14> ignore these values, e.g. for policy reasons.</t>

<t>Example:</t>

<figure><sourcecode type="json"><![CDATA[
    {
      "@type": "Domain",
      "name": "example.com",
      "dns": [
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns1.example.net."
          }
        },
        {
          "name": "@",
          "type": "ns",
          "rdata": {
            "nsdname": "ns2.example.net."
          }
        },
        {
          "name": "@",
          "type": "ds",
          "rdata": {
            "key_tag": 12345,
            "algorithm": 13,
            "digest_type": 2,
            "digest": "BE74359954660069D5C632B56F120EE9F3A86764247C"
          }
        }
      ],
      "dns_controls": {
        "maximum_signature_lifetime": {
          "ds": 86400
        }
      }
    }
]]></sourcecode></figure>

</section>
</section>
<section anchor="authoritative-dns-data"><name>Authoritative DNS data</name>

<t>A server <bcp14>MAY</bcp14> support additional RR types, e.g. to support delegation-less provisioning. By doing this the registry operators name servers becomes authoritative for the registered domain. A server <bcp14>MUST</bcp14> consider resource records designed for delegation - including DNSSEC - and resource records representing authoritative data - except for GLUE RR - mutual exclusive.</t>

<figure><sourcecode type="json"><![CDATA[
{
  "@type": "Domain",
  "name": "example.com",
  "dns": [
    {
      "name": "@",
      "type": "a",
      "rdata": {
        "address": "192.0.2.1"
      }
    },
    {
      "name": "www.example.com.",
      "type": "a",
      "rdata": {
        "address": "192.0.2.1"
      }
    },
    {
      "name": "@",
      "type": "aaaa",
      "rdata": {
        "address": "2001:DB8::1"
      }
    },
    {
      "name": "www.example.com.",
      "type": "a",
      "rdata": {
        "address": "2001:DB8::1"
      }
    },
    {
      "name": "@",
      "type": "mx",
      "rdata": {
        "preference": "10",
        "exchange": "mx1.example.com"
      }
    },
    {
      "name": "mx1.example.com.",
      "type": "a",
      "rdata": {
        "address": "192.0.2.2"
      }
    },
    {
      "name": "@",
      "type": "mx",
      "rdata": {
        "preference": "20",
        "exchange": "mx2.example.net"
      }
    },
    {
      "name": "@",
      "type": "txt",
      "rdata": {
        "txt_data": "v=spf1 -all"
      }
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="discoverability"><name>Discoverability</name>

<t>The server <bcp14>MUST</bcp14> provide the following information per profile in the discovery document in section 10 of <xref target="I-D.draft-ietf-rpp-requirements"/>:</t>

<t><list style="symbols">
  <t>A list of supported resource record types</t>
  <t>A list of applicable dns_controls</t>
  <t>Minimum, maximum and default values for dns_controls</t>
</list></t>

<t>TODO: Needs rewrite after definition of the discovery document</t>

</section>
<section anchor="epp-compatibility-considerations"><name>EPP compatibility considerations</name>

<t>TODO</t>

</section>
<section anchor="conventions-and-definitions"><name>Conventions and Definitions</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<section anchor="authoritative-data"><name>Authoritative data</name>

<t>Allowing to store authoritative resource records (see section 4.4 of this document) in the registry provides faster resolution. However, if not done properly situations may occur where the data served authoritative should have been delegated. RPP servers <bcp14>MUST</bcp14> take precautions to not store authoritative and non-authoritative data at the same time.</t>

<t>The types and number of authoritative records can result in uncontrolled growth of the registries zone file and eventually exhaust the hardware resources of the registries name server. RPP servers <bcp14>SHOULD</bcp14> consider limiting the amount of authoritative records and carefully choose which record types are allowed.</t>

</section>
<section anchor="host-references-within-the-rdata-field"><name>Host references within the rdata field</name>

<t>Some RR types (NS, MX and others) use references to host names which can be categorized into three categories:</t>

<t>Domain internal references
are references to a subordinate host name of the domain. E.g. "ns.example.com" is an domain internal reference when used as a name server for "example.com".</t>

<t>Registry internal references
are references to a host name within the same registry. E.g. "ns.example.com" is an domain internal reference when used as a name server for "example2.com".</t>

<t>Registry external references
are references to a host name outside of the registry. E.g. "ns.example.net" is an domain internal reference when used as a name server for "example.com".</t>

<t>Deletion of a host name while still being referenced may lead to severe security risks for the referencing domain.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document has no IANA actions.</t>

</section>
<section anchor="appendix-a-examples-from-current-implementations"><name>Appendix A. Examples from current implementations</name>

<section anchor="epp"><name>EPP</name>

<section anchor="create-domain-using-host-attributes-example"><name>Create domain using host attributes example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.com</domain:name>
        <domain:period unit="y">1</domain:period>
        <domain:ns>
          <domain:hostAttr>
            <domain:hostName>ns1.example.com</domain:hostName>
            <domain:hostAddr ip="v4">192.0.2.1</domain:hostAddr>
            <domain:hostAddr ip="v6">2001:db8::1</domain:hostAddr>
          </domain:hostAttr>
          <domain:hostAttr>
            <domain:hostName>ns2.example.com</domain:hostName>
            <domain:hostAddr ip="v4">192.0.2.2</domain:hostAddr>
          </domain:hostAttr>
        </domain:ns>
        <domain:registrant>registrantID</domain:registrant>
        <domain:contact type="admin">adminID</domain:contact>
        <domain:contact type="tech">techID</domain:contact>
      </domain:create>
    </create>
    <extension>
      <secDNS:create
          xmlns:secDNS="urn:ietf:params:xml:ns:secDNS-1.1">
        <secDNS:maxSigLife>604800</secDNS:maxSigLife>
        <secDNS:dsData>
          <secDNS:keyTag>12345</secDNS:keyTag>
          <secDNS:alg>13</secDNS:alg>
          <secDNS:digestType>2</secDNS:digestType>
          <secDNS:digest>
            BE74359954660069D5C632B56F120EE9F3A86764247
          </secDNS:digest>
        </secDNS:dsData>
      </secDNS:create>
      <ttl:create xmlns:ttl="urn:ietf:params:xml:ns:epp:ttl-1.0">
        <ttl:ttl for="NS">3600</ttl:ttl>
      </ttl:create>
    </extension>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

</section>
<section anchor="create-domain-using-host-object-example"><name>Create domain using host object example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.com</domain:name>
        <domain:period unit="y">1</domain:period>
        <domain:ns>
          <domain:hostObj>ns1.example.net</domain:hostObj>
          <domain:hostObj>ns2.example.net</domain:hostObj>
        </domain:ns>
        <domain:registrant>registrantID</domain:registrant>
        <domain:contact type="admin">adminID</domain:contact>
        <domain:contact type="tech">techID</domain:contact>
      </domain:create>
    </create>
    <extension>
      <secDNS:create
          xmlns:secDNS="urn:ietf:params:xml:ns:secDNS-1.1">
        <secDNS:maxSigLife>604800</secDNS:maxSigLife>
        <secDNS:dsData>
          <secDNS:keyTag>12345</secDNS:keyTag>
          <secDNS:alg>13</secDNS:alg>
          <secDNS:digestType>2</secDNS:digestType>
          <secDNS:digest>
            BE74359954660069D5C632B56F120EE9F3A86764247C
          </secDNS:digest>
        </secDNS:dsData>
      </secDNS:create>
      <ttl:create xmlns:ttl="urn:ietf:params:xml:ns:epp:ttl-1.0">
        <ttl:ttl for="NS">3600</ttl:ttl>
      </ttl:create>
    </extension>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "@type": "Domain",
  "name": "example.com",
  "...": "",
  "_object_references": {
    "nameserver": [
      {
        "name": "ns1.example.net.",
        "href": "https://rpp.example/nameservers/ns1.example.net",
        "rel": "nameserver"
      },
      {
        "name": "ns2.example.net.",
        "href": "https://rpp.example/nameservers/ns2.example.net",
        "rel": "nameserver"
      }
    ]
  },
  "dns": [
    {
      "name": "@",
      "type": "ds",
      "rdata": {
        "key_tag": 12345,
        "algorithm": 13,
        "digest_type": 2,
        "digest": "BE74359954660069D5C632B56F120EE9F3A86764247C"
      }
    }
  ],
  "dns_controls": {
    "maximum_signature_lifetime": {
      "ds": 604800
    },
    "ttl": {
      "ns": 3600
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="free-registry-for-enum-and-domains-fred"><name>Free Registry for ENUM and Domains (FRED)</name>

<t>FRED is an open source registry software developed by CZ.NIC</t>

<section anchor="create-domain-example"><name>Create domain example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="utf-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <domain:create
          xmlns:domain="http://www.nic.cz/xml/epp/domain-1.4">
        <domain:name>example.cz</domain:name>
        <domain:registrant>registrantID</domain:registrant>
        <domain:admin>adminID</domain:admin>
        <domain:nsset>nssetID</domain:nsset>
        <domain:keyset>keysetID</domain:keyset>
      </domain:create>
    </create>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

</section>
<section anchor="create-nsset-example"><name>Create nsset example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="utf-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <nsset:create
          xmlns:nsset="http://www.nic.cz/xml/epp/nsset-1.2">
        <nsset:id>nssetID</nsset:id>
        <nsset:ns>
          <nsset:name>ns1.example.cz</nsset:name>
          <nsset:addr>192.0.2.1</nsset:addr>
          <nsset:addr>192.0.2.2</nsset:addr>
        </nsset:ns>
        <nsset:ns>
          <nsset:name>nameserver-example.cz</nsset:name>
        </nsset:ns>
        <nsset:tech>techID</nsset:tech>
        <nsset:reportlevel>1</nsset:reportlevel>
      </nsset:create>
    </create>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

</section>
<section anchor="create-keyset-example"><name>Create keyset example</name>

<t>EPP XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="utf-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <keyset:create
          xmlns:keyset="http://www.nic.cz/xml/epp/keyset-1.3">
        <keyset:id>keysetID</keyset:id>
        <keyset:dnskey>
          <keyset:flags>257</keyset:flags>
          <keyset:protocol>3</keyset:protocol>
          <keyset:alg>5</keyset:alg>
          <keyset:pubKey>AwEAAddt2AkL4RJ9Ao6LCWheg8</keyset:pubKey>
        </keyset:dnskey>
        <keyset:dnskey>
          <keyset:flags>257</keyset:flags>
          <keyset:protocol>3</keyset:protocol>
          <keyset:alg>5</keyset:alg>
          <keyset:pubKey>AwEAAddt2AkL4RJ9Ao6LCWheg9</keyset:pubKey>
        </keyset:dnskey>
        <keyset:tech>techID</keyset:tech>
      </keyset:create>
    </create>
    <clTRID>clTRID-1234</clTRID>
  </command>
</epp>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<t>TODO</t>

<figure><sourcecode type="json"><![CDATA[
{}
]]></sourcecode></figure>

</section>
</section>
<section anchor="realtime-registry-interface-rri"><name>Realtime Registry Interface (RRI)</name>

<t>RRI is a proprietary protocol developed by DENIC</t>

<section anchor="create-domain-with-name-servers-example"><name>Create domain with name servers example</name>

<t>RRI XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<registry-request
    xmlns="http://registry.denic.de/global/5.0"
    xmlns:domain="http://registry.denic.de/domain/5.0"
    xmlns:dnsentry="http://registry.denic.de/dnsentry/5.0">
  <domain:create>
    <domain:handle>example.de</domain:handle>
    <domain:contact role="holder">registrantID</domain:contact>
    <dnsentry:dnsentry xsi:type="dnsentry:NS">
      <dnsentry:owner>example.de</dnsentry:owner>
      <dnsentry:rdata>
        <dnsentry:nameserver>ns1.example.com</dnsentry:nameserver>
      </dnsentry:rdata>
    </dnsentry:dnsentry>
    <dnsentry:dnsentry xsi:type="dnsentry:NS">
      <dnsentry:owner>example.de</dnsentry:owner>
      <dnsentry:rdata>
        <dnsentry:nameserver>ns1.example.de</dnsentry:nameserver>
        <dnsentry:address>192.0.2.1</dnsentry:address>
      </dnsentry:rdata>
    </dnsentry:dnsentry>
    <dnsentry:dnsentry xsi:type="dnsentry:DNSKEY">
      <dnsentry:owner>example.de.</dnsentry:owner>
      <dnsentry:rdata>
        <dnsentry:flags>257</dnsentry:flags>
        <dnsentry:protocol>3</dnsentry:protocol>
        <dnsentry:algorithm>5</dnsentry:algorithm>
        <dnsentry:publicKey>
          AwEAAddt2AkL4RJ9Ao6LCWheg8
        </dnsentry:publicKey>
      </dnsentry:rdata>
    </dnsentry:dnsentry>
  </domain:create>
  <ctid>clTRID-1234</ctid>
</registry-request>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "@type": "Domain",
  "name": "example.de",
  "...": "",
  "dns": [
    {
      "name": "@",
      "type": "ns",
      "rdata": {
        "nsdname": "ns1.example.com"
      }
    },
    {
      "name": "@",
      "type": "ns",
      "rdata": {
        "nsdname": "ns1.example.de"
      }
    },
    {
      "name": "ns1.example.de",
      "type": "a",
      "rdata": {
        "address": "192.0.2.1"
      }
    },
    {
      "name": "@",
      "type": "dnskey",
      "rdata": {
        "flags": 257,
        "protocol": 3,
        "algorithm": 5,
        "public_key": "AwEAAddt2AkL4RJ9Ao6LCWheg8"
      }
    }
  ]
}
]]></sourcecode></figure>

</section>
<section anchor="create-domain-without-delegation-example"><name>Create domain without delegation example</name>

<t>RRI XML:</t>

<figure><sourcecode type="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<registry-request
    xmlns="http://registry.denic.de/global/5.0"
    xmlns:domain="http://registry.denic.de/domain/5.0"
    xmlns:dnsentry="http://registry.denic.de/dnsentry/5.0">
  <domain:update>
    <domain:handle>example.de</domain:handle>
    <domain:contact role="holder">registrantID</domain:contact>
    <dnsentry:dnsentry xsi:type="dnsentry:A">
      <dnsentry:owner>example.de</dnsentry:owner>
      <dnsentry:rdata>
        <dnsentry:address>192.0.2.1</dnsentry:address>
      </dnsentry:rdata>
    </dnsentry:dnsentry>
  </domain:update>
  <ctid>clTRID-1234</ctid>
</registry-request>
]]></sourcecode></figure>

<t>RPP JSON representation:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "@type": "Domain",
  "name": "example.de",
    "...": "",
  "dns": [
    {
      "name": "@",
      "type": "a",
      "rdata": {
        "address": "192.0.2.1"
      }
    }
  ]
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="rdap"><name>RDAP</name>

<section anchor="domain-object"><name>Domain object</name>

<t>Registration Data Access Protocol (RDAP) is described in <xref target="RFC9083"/>. An extention proposing Time-to-Live (TTL) values is described in
<xref target="I-D.draft-brown-rdap-ttl-extension"/> and is close to adoption in the regext working group.</t>

<t>RDAP JSON:</t>

<figure><sourcecode type="json"><![CDATA[
{
  "objectClassName": "domain",
  "ldhName": "example.com",
  "nameservers": [
    {
      "objectClassName": "nameserver",
      "ldhName": "ns1.example.com",
      "ipAddresses": {
        "v4": ["192.0.2.1"],
        "v6": ["2001:db8::1"]
      }
    },
    {
      "objectClassName": "nameserver",
      "ldhName": "ns2.example.com",
      "ipAddresses": {
        "v4": ["192.0.2.2"]
      }
    }
  ],
  "secureDNS": {
    "delegationSigned": true,
    "maxSigLife": 604800,
    "dsData": [
      {
        "keyTag": 12345,
        "algorithm": 13,
        "digestType": 2,
        "digest": "BE74359954660069D5C632B56F120EE9F3A86764247C"
      }
    ]
  },
  "ttl": [
       {
         "types": [ "NS" ],
         "value": 3600
       }
  ],
  "events": [
    {
      "eventAction": "registration",
      "eventDate": "2025-01-01T00:00:00Z"
    },
    {
      "eventAction": "expiration",
      "eventDate": "2035-01-01T00:00:00Z"
    }
  ],
  "status": ["active"]
}
]]></sourcecode></figure>

</section>
</section>
</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC1035">
  <front>
    <title>Domain names - implementation and specification</title>
    <author fullname="P. Mockapetris" initials="P." surname="Mockapetris"/>
    <date month="November" year="1987"/>
    <abstract>
      <t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System. It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="13"/>
  <seriesInfo name="RFC" value="1035"/>
  <seriesInfo name="DOI" value="10.17487/RFC1035"/>
</reference>

<reference anchor="RFC5731">
  <front>
    <title>Extensible Provisioning Protocol (EPP) Domain Name Mapping</title>
    <author fullname="S. Hollenbeck" initials="S." surname="Hollenbeck"/>
    <date month="August" year="2009"/>
    <abstract>
      <t>This document describes an Extensible Provisioning Protocol (EPP) mapping for the provisioning and management of Internet domain names stored in a shared central repository. Specified in XML, the mapping defines EPP command syntax and semantics as applied to domain names. This document obsoletes RFC 4931. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="69"/>
  <seriesInfo name="RFC" value="5731"/>
  <seriesInfo name="DOI" value="10.17487/RFC5731"/>
</reference>

<reference anchor="RFC5732">
  <front>
    <title>Extensible Provisioning Protocol (EPP) Host Mapping</title>
    <author fullname="S. Hollenbeck" initials="S." surname="Hollenbeck"/>
    <date month="August" year="2009"/>
    <abstract>
      <t>This document describes an Extensible Provisioning Protocol (EPP) mapping for the provisioning and management of Internet host names stored in a shared central repository. Specified in XML, the mapping defines EPP command syntax and semantics as applied to host names. This document obsoletes RFC 4932. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="69"/>
  <seriesInfo name="RFC" value="5732"/>
  <seriesInfo name="DOI" value="10.17487/RFC5732"/>
</reference>

<reference anchor="RFC5910">
  <front>
    <title>Domain Name System (DNS) Security Extensions Mapping for the Extensible Provisioning Protocol (EPP)</title>
    <author fullname="J. Gould" initials="J." surname="Gould"/>
    <author fullname="S. Hollenbeck" initials="S." surname="Hollenbeck"/>
    <date month="May" year="2010"/>
    <abstract>
      <t>This document describes an Extensible Provisioning Protocol (EPP) extension mapping for the provisioning and management of Domain Name System security (DNSSEC) extensions for domain names stored in a shared central repository. Specified in XML, this mapping extends the EPP domain name mapping to provide additional features required for the provisioning of DNS security extensions. This document obsoletes RFC 4310. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5910"/>
  <seriesInfo name="DOI" value="10.17487/RFC5910"/>
</reference>

<reference anchor="RFC9803">
  <front>
    <title>Extensible Provisioning Protocol (EPP) Mapping for DNS Time-to-Live (TTL) Values</title>
    <author fullname="G. Brown" initials="G." surname="Brown"/>
    <date month="June" year="2025"/>
    <abstract>
      <t>This document describes an extension to the Extensible Provisioning
Protocol (EPP) that allows EPP clients to manage the Time-to-Live
(TTL) value for domain name delegation records.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9803"/>
  <seriesInfo name="DOI" value="10.17487/RFC9803"/>
</reference>

<reference anchor="RFC3596">
  <front>
    <title>DNS Extensions to Support IP Version 6</title>
    <author fullname="S. Thomson" initials="S." surname="Thomson"/>
    <author fullname="C. Huitema" initials="C." surname="Huitema"/>
    <author fullname="V. Ksinant" initials="V." surname="Ksinant"/>
    <author fullname="M. Souissi" initials="M." surname="Souissi"/>
    <date month="October" year="2003"/>
    <abstract>
      <t>This document defines the changes that need to be made to the Domain Name System (DNS) to support hosts running IP version 6 (IPv6). The changes include a resource record type to store an IPv6 address, a domain to support lookups based on an IPv6 address, and updated definitions of existing query types that return Internet addresses as part of additional section processing. The extensions are designed to be compatible with existing applications and, in particular, DNS implementations themselves. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="88"/>
  <seriesInfo name="RFC" value="3596"/>
  <seriesInfo name="DOI" value="10.17487/RFC3596"/>
</reference>

<reference anchor="RFC4034">
  <front>
    <title>Resource Records for the DNS Security Extensions</title>
    <author fullname="R. Arends" initials="R." surname="Arends"/>
    <author fullname="R. Austein" initials="R." surname="Austein"/>
    <author fullname="M. Larson" initials="M." surname="Larson"/>
    <author fullname="D. Massey" initials="D." surname="Massey"/>
    <author fullname="S. Rose" initials="S." surname="Rose"/>
    <date month="March" year="2005"/>
    <abstract>
      <t>This document is part of a family of documents that describe the DNS Security Extensions (DNSSEC). The DNS Security Extensions are a collection of resource records and protocol modifications that provide source authentication for the DNS. This document defines the public key (DNSKEY), delegation signer (DS), resource record digital signature (RRSIG), and authenticated denial of existence (NSEC) resource records. The purpose and format of each resource record is described in detail, and an example of each resource record is given.</t>
      <t>This document obsoletes RFC 2535 and incorporates changes from all updates to RFC 2535. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4034"/>
  <seriesInfo name="DOI" value="10.17487/RFC4034"/>
</reference>

<reference anchor="RFC9083">
  <front>
    <title>JSON Responses for the Registration Data Access Protocol (RDAP)</title>
    <author fullname="S. Hollenbeck" initials="S." surname="Hollenbeck"/>
    <author fullname="A. Newton" initials="A." surname="Newton"/>
    <date month="June" year="2021"/>
    <abstract>
      <t>This document describes JSON data structures representing registration information maintained by Regional Internet Registries (RIRs) and Domain Name Registries (DNRs). These data structures are used to form Registration Data Access Protocol (RDAP) query responses. This document obsoletes RFC 7483.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="95"/>
  <seriesInfo name="RFC" value="9083"/>
  <seriesInfo name="DOI" value="10.17487/RFC9083"/>
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC8484">
  <front>
    <title>DNS Queries over HTTPS (DoH)</title>
    <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
    <author fullname="P. McManus" initials="P." surname="McManus"/>
    <date month="October" year="2018"/>
    <abstract>
      <t>This document defines a protocol for sending DNS queries and getting DNS responses over HTTPS. Each DNS query-response pair is mapped into an HTTP exchange.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8484"/>
  <seriesInfo name="DOI" value="10.17487/RFC8484"/>
</reference>

<reference anchor="RFC9250">
  <front>
    <title>DNS over Dedicated QUIC Connections</title>
    <author fullname="C. Huitema" initials="C." surname="Huitema"/>
    <author fullname="S. Dickinson" initials="S." surname="Dickinson"/>
    <author fullname="A. Mankin" initials="A." surname="Mankin"/>
    <date month="May" year="2022"/>
    <abstract>
      <t>This document describes the use of QUIC to provide transport confidentiality for DNS. The encryption provided by QUIC has similar properties to those provided by TLS, while QUIC transport eliminates the head-of-line blocking issues inherent with TCP and provides more efficient packet-loss recovery than UDP. DNS over QUIC (DoQ) has privacy properties similar to DNS over TLS (DoT) specified in RFC 7858, and latency characteristics similar to classic DNS over UDP. This specification describes the use of DoQ as a general-purpose transport for DNS and includes the use of DoQ for stub to recursive, recursive to authoritative, and zone transfer scenarios.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9250"/>
  <seriesInfo name="DOI" value="10.17487/RFC9250"/>
</reference>

<reference anchor="RFC9499">
  <front>
    <title>DNS Terminology</title>
    <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
    <author fullname="K. Fujiwara" initials="K." surname="Fujiwara"/>
    <date month="March" year="2024"/>
    <abstract>
      <t>The Domain Name System (DNS) is defined in literally dozens of different RFCs. The terminology used by implementers and developers of DNS protocols, and by operators of DNS systems, has changed in the decades since the DNS was first defined. This document gives current definitions for many of the terms used in the DNS in a single document.</t>
      <t>This document updates RFC 2308 by clarifying the definitions of "forwarder" and "QNAME". It obsoletes RFC 8499 by adding multiple terms and clarifications. Comprehensive lists of changed and new definitions can be found in Appendices A and B.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="219"/>
  <seriesInfo name="RFC" value="9499"/>
  <seriesInfo name="DOI" value="10.17487/RFC9499"/>
</reference>


<reference anchor="I-D.draft-ietf-deleg">
   <front>
      <title>Extensible Delegation for DNS</title>
      <author fullname="Tim April" initials="T." surname="April">
         <organization>Google, LLC</organization>
      </author>
      <author fullname="Petr Špaček" initials="P." surname="Špaček">
         <organization>ISC</organization>
      </author>
      <author fullname="Ralf Weber" initials="R." surname="Weber">
         <organization>Akamai Technologies</organization>
      </author>
      <author fullname="David C Lawrence" initials="" surname="Lawrence">
         <organization>Salesforce</organization>
      </author>
      <date day="7" month="July" year="2025"/>
      <abstract>
	 <t>   A delegation in the Domain Name System (DNS) is a mechanism that
   enables efficient and distributed management of the DNS namespace.
   It involves delegating authority over subdomains to specific DNS
   servers via NS records, allowing for a hierarchical structure and
   distributing the responsibility for maintaining DNS records.

   An NS record contains the hostname of the nameserver for the
   delegated namespace.  Any facilities of that nameserver must be
   discovered through other mechanisms.  This document proposes a new
   extensible DNS record type, DELEG, for delegation of the authority
   for a domain.  Future documents then can use this mechanism to use
   additional information about the delegated namespace and the
   capabilities of authoritative nameservers for the delegated
   namespace.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-deleg-01"/>
   
</reference>


<reference anchor="I-D.draft-ietf-rpp-requirements">
   <front>
      <title>RESTful Provisioning Protocol (RPP) - Requirements</title>
      <author fullname="Maarten Wullink" initials="M." surname="Wullink">
         <organization>SIDN Labs</organization>
      </author>
      <author fullname="Paweł Kowalik" initials="P." surname="Kowalik">
         <organization>DENIC</organization>
      </author>
      <date day="30" month="June" year="2025"/>
      <abstract>
	 <t>   This document describes the requirement for the development of the
   RESTful Provisioning Protocol (RPP).

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-rpp-requirements-01"/>
   
</reference>


<reference anchor="I-D.draft-brown-rdap-ttl-extension">
   <front>
      <title>RDAP Extension for DNS Time-To-Live (TTL Values)</title>
      <author fullname="Gavin Brown" initials="G." surname="Brown">
         <organization>ICANN</organization>
      </author>
      <date day="17" month="June" year="2025"/>
      <abstract>
	 <t>   This document describes an extension to the Registration Data Access
   Protocol ([RFC9083]) which allows the Time-To-Live (TTL) values for
   relevant DNS record types to be included in RDAP responses.

About this draft

   This note is to be removed before publishing as an RFC.

   The source for this draft, and an issue tracker, may can be found at
   https://github.com/gbxyz/rdap-ttl-extension.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-brown-rdap-ttl-extension-03"/>
   
</reference>




    </references>

</references>


<?line 1110?>

<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

